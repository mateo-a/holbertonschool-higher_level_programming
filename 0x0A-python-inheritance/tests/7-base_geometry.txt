The ``7-base_geometry`` method
===============================

Using ``BaseGeometry``
----------------------

First import ``BaseGeometry`` from the ``7-base_geometry`` module:

>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

Now use it:

>>> bg = BaseGeometry()
>>> bg.integer_validator("str", 1)

>>> bg.integer_validator("str", "str")
Traceback (most recent call last):
    ...
TypeError: str must be an integer

>>> bg.integer_validator("str", -87)
Traceback (most recent call last):
    ...
ValueError: str must be greater than 0

>>> bg.integer_validator("str", 0)
Traceback (most recent call last):
    ...
ValueError: str must be greater than 0

>>> bg.integer_validator("str",)
Traceback (most recent call last):
    ...
TypeError: integer_validator() missing 1 required positional argument: 'value'

>>> bg.integer_validator(,1)
Traceback (most recent call last):
    ...
SyntaxError: invalid syntax

>>> bg.integer_validator("string", True)
Traceback (most recent call last):
    ...
TypeError: string must be an integer

>>> bg.integer_validator("str", (1,))
Traceback (most recent call last):
    ...
TypeError: str must be an integer

>>> bg.integer_validator("string", 8.6)
Traceback (most recent call last):
    ...
TypeError: string must be an integer

>>> bg.integer_validator("str", None)
Traceback (most recent call last):
    ...
TypeError: str must be an integer

>>> bg.integer_validator("str", {5, 7, 3, 4})
Traceback (most recent call last):
    ...
TypeError: str must be an integer

>>> bg.area()
Traceback (most recent call last):
    ...
Exception: area() is not implemented

>>> bg.integer_validator("str", [7, 8, 9, 0])
Traceback (most recent call last):
    ...
TypeError: str must be an integer

>>> bg.integer_validator("", True)
Traceback (most recent call last):
    ...
TypeError:  must be an integer
